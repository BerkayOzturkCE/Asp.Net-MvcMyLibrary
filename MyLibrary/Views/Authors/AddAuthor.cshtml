@model MyLibrary.Application.AuthorOparation.Commands.CreateAuthor.CreateAuthorCommand.CreateAuthorModel

@{
    ViewData["Title"] = "AddAuthor";
    ViewBag.Current = "Author";

}

<h1 class="text-light">AddAuthor</h1>

<h4 class="text-light">Author</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddAuthor" method="post">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group text-white ">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group text-white ">
                <label asp-for="Surname" class="control-label"></label>
                <input asp-for="Surname" class="form-control" />
                <span asp-validation-for="Surname" class="text-danger"></span>
            </div>
            <div class="form-group text-white ">
                <label asp-for="Birthday" class="control-label"></label>
                <input asp-for="Birthday" class="form-control" />
                <span asp-validation-for="Birthday" class="text-danger"></span>
            </div>
            <div class="form-group text-white ">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a class="text-primary" asp-action="GetAuthors">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
